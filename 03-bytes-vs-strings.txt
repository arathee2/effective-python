'''
1. Bytes
- A sequence of raw unsigned 8-bit characters (ASCII value).
- Could be directly saved to the disk without conversion.
- E.g. 'a' in bytes is 97.
- To convert to string, use the .decode() method.
'''
a = b'h\x65llo'
print(list(a))
print(a)

def to_str(bytes_or_str):
    if isinstance(bytes_or_str, bytes):
        value = bytes_or_str.decode('utf-8')
    else:
        value = bytes_or_str
    return value  # Instance of str

print(repr(to_str(b'foo')))
print(repr(to_str('bar')))

'''
2. Strings
- A sequence of unicode characters.
- To convert to bytes, use the .encode() method.
'''
a = 'a\u0300 propos'
print(list(a))
print(a)

def to_bytes(bytes_or_str):
    if isinstance(bytes_or_str, str):
        value = bytes_or_str.encode('utf-8')
    else:
        value = bytes_or_str
    return value  # Instance of bytes

print(repr(to_bytes(b'foo')))
print(repr(to_bytes('bar')))

'''
3. Bytes and Strings are incompatible types
'''
# valid
b'one' + b'two'
'one' + 'two'
b'red' > b'blue'
'red' > 'blue'

# invalid
b'one' + 'two'
'one' + b'two'
'red' > b'blue'
b'red' > 'blue'
b'foo' == 'foo'  # always returns False

'''
4. Reading and writing files
'''
# use 'wb' and 'rb' mode instead of 'w' and 'r' while reading and writing files
with open('data.bin', 'wb') as f:
    f.write(b'\xf1\xf2\xf3\xf4\xf5')

with open('data.bin', 'rb') as f:
    data = f.read()